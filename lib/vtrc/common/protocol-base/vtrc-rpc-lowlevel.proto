
import "vtrc-errors.proto";
import "vtrc-rpc-options.proto";

package vtrc.rpc;

// index 53000

message message_info {

    enum type_enum {

        MESSAGE_NONE            = 0; // value for internal usage only

        MESSAGE_CLIENT_CALL     = 1; // from client
        MESSAGE_SERVER_CALL     = 2; // from server

        MESSAGE_CLIENT_CALLBACK = 3; // from client
        MESSAGE_SERVER_CALLBACK = 4; // from server

        MESSAGE_SERVICE         = 5; // internal
        MESSAGE_INTERNAL        = 6; // internal
    }

    enum flags_enum {
        FLAG_CALLBACK_ALONE  = 0x01;
    }

    optional uint32 message_type    = 1; //[default = 0]; // @message_type_enum
    optional uint32 message_flags   = 2; //[default = 0]; // @message_flags_enum
}

message call_info {
    optional bytes service_id = 1; // we can use name, full_name or crc :]
    optional bytes method_id  = 2;
}

message lowlevel_unit {

    // --- header --- //
    optional uint64                         id  = 1;
    optional uint64                  target_id  = 2;
    optional message_info                 info  = 3;
    optional call_info                    call  = 4;
    optional vtrc.rpc.errors.container   error  = 5;
    optional unit_options                  opt  = 6;
    optional bytes                channel_data  = 7; // some optional data from
                                                     // the OTHER side!
    optional bytes               lowlevel_data  = 8; // some optional data
                                                     // proto lowlevel can use

    // --- //
    optional bytes  request = 20;
    optional bytes response = 21;
}

