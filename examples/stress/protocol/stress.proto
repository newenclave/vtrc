syntax="proto3";

package vtrc_example;
option cc_generic_services = true;

message empty { }

message ping_req {
    bytes payload = 1;
}

message ping_res { }

message generate_events_req {
    uint32 count         = 1;
    bool   callback      = 2;
    bool   wait          = 3;
    uint32 payload_size  = 4;
}

message generate_events_res {
    uint32 count   = 1;
}

message recursive_call_req {
    uint32 balance = 1;
    bytes  payload = 2;
}

message recursive_call_res { }

message shutdown_req { }
message shutdown_res { }

message timer_register_req {
    uint32 microseconds = 1;
}

message timer_register_res {
    uint32 id = 1;
}

service stress_service {

    rpc init (empty) returns (empty);
    rpc ping (ping_req) returns (ping_res);
    rpc generate_event (generate_events_req) returns (generate_events_res);

    /// make recursive_callback if balance != 0
    rpc recursive_call (recursive_call_req) returns (recursive_call_res);

    /// shutdown server
    rpc shutdown(shutdown_req) returns (shutdown_res);

    rpc reg(timer_register_req)     returns (timer_register_res);
    rpc unreg(timer_register_res)   returns (empty);
}

/// ============== events or callbacks ================== ///

message event_req {
    uint32 id            = 1;
    bool   is_event      = 2;
    bytes  payload       = 4;
}

message event_res { }

service stress_events {

    rpc event              (event_req)         returns (event_res);

    /// make recursive_call if balance != 0
    rpc recursive_callback (recursive_call_req) returns (recursive_call_res);

    rpc timer_event( timer_register_res ) returns ( empty );
}

