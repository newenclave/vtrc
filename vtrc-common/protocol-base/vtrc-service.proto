import "google/protobuf/descriptor.proto";
import "vtrc-errors.proto";
import "vtrc-rpc-lowlevel.proto";

package vtrc_service;

// index 54000

option cc_generic_services = true;

message test_message {
    optional uint32 id  = 1;
    optional bytes  b   = 2;
}

service test_rpc {

    option (vtrc_rpc_lowlevel.service_options ) = {
        opt: { secure_level: 1, call_timeout: 13000, wait: true }
    };

    rpc test( test_message ) returns ( test_message )
    {
        option (vtrc_rpc_lowlevel.method_options) = {
            opt: { secure_level: 2, wait: true }
        };
    };

    rpc test2( test_message ) returns ( test_message )
    {
        option (vtrc_rpc_lowlevel.method_options) = {
            opt: { secure_level: 2, wait: true }
        };
    };
}

service test_events {
    option (vtrc_rpc_lowlevel.service_options ) = {
        opt: { secure_level: 1, call_timeout: 1000, wait: true }
    };
    rpc test(vtrc_rpc_lowlevel.message_info)
                                returns ( vtrc_rpc_lowlevel.message_info );
}

/// +++++++++++ service internal +++++++++++ ///
message ping_req { }
message pong_res { }

service internal {
    rpc ping(ping_req) returns (pong_res);
}

