syntax="proto3";

import "vtrc-errors.proto";

package vtrc.rpc;

// index 53000

message unit_options {
    bool   wait             = 2;
    bool   accept_callbacks = 4;
    bool   accept_response  = 5;
}

message session_options {
    uint32 max_active_calls    = 1;  //per user
    uint32 max_message_length  = 2;   //per user
//   uint32 max_total_calls     = 3;
    uint32 max_stack_size      = 4;   //per user
    uint32 read_buffer_size    = 5;   //per user
}

message message_info {

    enum message_type_enum {

        MESSAGE_NONE            = 0; // value for internal usage only

        MESSAGE_CLIENT_CALL     = 1; // from client
        MESSAGE_SERVER_CALL     = 2; // from server

        MESSAGE_CLIENT_CALLBACK = 3; // from client
        MESSAGE_SERVER_CALLBACK = 4; // from server

        MESSAGE_SERVICE         = 5; // intervals
        MESSAGE_INTERNAL        = 6; // intervals
    }

    uint32 message_type    = 1; // @message_type_enum
}

message call_info {
    bytes service_id = 1; // we can use name, full_name or crc :]
    bytes method_id  = 2;
}

message lowlevel_unit {

    // --- header --- //
    uint64                         id  =  1;
    uint64                  target_id  =  2;
    message_info                 info  =  3;
    call_info                    call  =  4;
    vtrc.rpc.errors.container    error =  5;
    unit_options                  opt  =  6;
    bytes                channel_data  =  7; // some optional data from
                                                     // the OTHER side!

    // --- //
    bytes  request = 20;
    bytes response = 21;
}

