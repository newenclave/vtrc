
import "vtrc-errors.proto";

package vtrc.rpc;

// index 53000

message unit_options {
    optional bool   wait             = 2 [default = true];
    optional bool   accept_callbacks = 4 [default = true];
    optional bool   accept_response  = 5 [default = true];
}

message session_options {
    optional uint32 max_active_calls    = 1 [default = 5];      //per user
    optional uint32 max_message_length  = 2 [default = 65536];  //per user
//    optional uint32 max_total_calls     = 3 [default = 20];
    optional uint32 max_stack_size      = 4 [default = 64];     //per user
    optional uint32 read_buffer_size    = 5 [default = 4096];   //per user
}

message message_info {

    enum message_type_enum {

        MESSAGE_NONE            = 0; // value for internal usage only

        MESSAGE_CLIENT_CALL     = 1; // from client
        MESSAGE_SERVER_CALL     = 2; // from server

        MESSAGE_CLIENT_CALLBACK = 3; // from client
        MESSAGE_SERVER_CALLBACK = 4; // from server

        MESSAGE_SERVICE         = 5; // intervals
        MESSAGE_INTERNAL        = 6; // intervals
    }

    optional uint32 message_type    = 1 [default = 0]; // @message_type_enum
}

message call_info {
    optional bytes service_id = 1; // we can use name, full_name or crc :]
    optional bytes method_id  = 2;
}

message lowlevel_unit {

    // --- header --- //
    optional uint64                         id =  1;
    optional uint64                  target_id =  2;
    optional message_info                 info =  3;
    optional call_info                    call =  4;
    optional vtrc.rpc.errors.container    error = 5;
    optional unit_options                  opt =  6;
    optional bytes                channel_data =  7; // some optional data from
                                                     // the OTHER side!

    // --- //
    optional bytes  request = 20;
    optional bytes response = 21;
}

