
import "vtrc-errors.proto";

package vtrc_rpc;

// index 53000

message unit_options {
    optional bool       wait             = 2 [default = true];
    optional bool       accept_callbacks = 4 [default = true];
    optional bool       accept_response  = 5 [default = true];
}

message message_info {

    enum message_type_enum {

        MESSAGE_NONE            = 0; // value for internal usage only

        MESSAGE_CALL            = 1; // from client
        MESSAGE_EVENT           = 2; // from server

        MESSAGE_INSERTION_CALL  = 3; // from client
        MESSAGE_CALLBACK        = 4; // from server

        MESSAGE_SERVICE         = 5; // intervals
        MESSAGE_INTERNAL        = 6; // intervals
    }

    optional uint32 message_type    = 1 [default = 0]; // @message_type_enum
}

message call_info {
    optional bytes service_id = 1; // we can use name, full_name or crc :]
    optional bytes method_id  = 2;
}

message lowlevel_unit {

    // --- header --- //
    optional uint64                         id =  1;
    optional uint64                  target_id =  2;
    optional message_info                 info =  3;
    optional call_info                    call =  4;
    optional vtrc_errors.container       error =  5;
    optional unit_options                  opt =  6;

    // --- //
    optional bytes  request = 20;
    optional bytes response = 21;
}

